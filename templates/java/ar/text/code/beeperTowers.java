/*
 * ملف: مخروط جمعكاريل
 * ------------------
 * تجمع فئة مخروط جمعكاريل جميع مخروط البالغ عددها مخ
 * روط في سلسلة من الأبراج الرأسية وتودعها في أقصى شر
 * ق الزاوية في الصف الأول.
 */
import stanford.كاريل.*;
public class مخروطجمعكاريل extends كاريل {

   /**
    * يحدد نقطة دخول البرنامج.
    */
   public void run() {
      جمعكلمخروطق();
      إسقاطجميعمخروطثانية();
      العودةإلىالمنزل();
   }

   /**
    * يجمع مخروط s من كل برج من خلال التحرك على طول الصف
    * الأول ، استدعاء جمعبرجواحد في كل زاوية. كاريل لهذ
    * ه الطريقة هو أن كاريل في الزاوية الشرقية من الصف ا
    * لأول في مواجهة الشرق.
    */
   private void جمعكلمخروطق() {
      while (frontIsClear()) {
         جمعبرجواحد();
         move(); 
      }
      جمعبرجواحد();
   }

   /**
    * يجمع مخروط ق في برج واحد. عندما يتم استدعاء كاريل
    * ، يجب أن يكون كاريل في الصف الأول في مواجهة الشرق.
    * الشرط المسبق لـ جمعبرجواحد هو أن كاريل يجب أن يوا
    * جه الشرق مرة أخرى في نفس الزاوية.
    */
   private void جمعبرجواحد() {
      turnLeft();
      جمعخطمخروطثانية();
      turnAround();
      moveإلىالجدار();
      turnLeft();
   }

   /**
    * يجمع خط متتالي قدره مخروط ثانية. يشار إلى نهاية ال
    * خط مخروط بزاوية لا تحتوي على مخروط ثانية.
    */
   private void جمعخطمخروطثانية() {
      while (beepersPresent()) {
         pickBeeper();
         if (frontIsClear()) {
            move(); 
         }
      } 
   }

   /**
    * يسقط كل مخروط s في الزاوية الحالية.
    */
   private void إسقاطجميعمخروطثانية() {
      while (beepersInBag()) {
         putBeeper();
      }
   }

   /**
    * إرجاع كاريل إلى موقعه الأولي في زاوية الجادة الأول
    * ى والصف الأول ، في مواجهة الشرق. الشرط المسبق لهذه
    * الطريقة هو أن كاريل يجب أن يواجه الشرق في مكان ما
    * في الصف الأول ، وهذا صحيح في ختام جمعكلمخروطق.
    */
   private void العودةإلىالمنزل() {
      turnAround();
      moveإلىالجدار();
      turnAround();
   }

   /** كاريل للأمام حتى يتم حظره بواسطة الحائط. */
   private void moveإلىالجدار(){
      while (frontIsClear()) {
         move();
      } 
   }

   /** يتحول كاريل 180 درجة حولها */
   private void turnAround(){
      turnLeft();
      turnLeft();
   }
}